<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux和shell on 灰太狼的测试不归路</title>
    <link>http://gucj.github.io/categories/linux%E5%92%8Cshell/</link>
    <description>Recent content in Linux和shell on 灰太狼的测试不归路</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Jun 2016 18:46:48 +0800</lastBuildDate>
    <atom:link href="http://gucj.github.io/categories/linux%E5%92%8Cshell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>git学习笔记</title>
      <link>http://gucj.github.io/post/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 15 Jun 2016 18:46:48 +0800</pubDate>
      
      <guid>http://gucj.github.io/post/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>

&lt;p&gt;[TOC]
##git学习笔记&lt;/p&gt;

&lt;h3 id=&#34;git-init-初始化一个git仓库:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git init ：初始化一个git仓库&lt;/h3&gt;

&lt;p&gt;即把某个目录创建为git仓库，目录下会多一个.git 文件&lt;/p&gt;

&lt;h3 id=&#34;git-add-添加文件到仓库:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git add ：添加文件到仓库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;git add .    添加当前目录的所有内容&lt;/li&gt;
&lt;li&gt;git add file   添加某个具体的文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git-rm-从仓库删除文件:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git rm ：从仓库删除文件&lt;/h3&gt;

&lt;p&gt;可以添加 -f 强制删除已经改动的文件&lt;/p&gt;

&lt;h3 id=&#34;git-checkout-file-撤销工作区对某个文件的修改:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git checkout &amp;ndash; file ：撤销工作区对某个文件的修改&lt;/h3&gt;

&lt;h3 id=&#34;git-commit-m-commitmessage-将改动提交到仓库-备注提交说明:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git commit -m &amp;ldquo;commitMessage&amp;rdquo;：将改动提交到仓库，备注提交说明&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;备注:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在git commit前，可以进行多次git add,最终会把多次添加的所有文件都提交到仓库&lt;/p&gt;

&lt;h3 id=&#34;git-status-查看仓库当前状态:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git status ： 查看仓库当前状态&lt;/h3&gt;

&lt;p&gt;展示增加了哪些,删除了哪些,哪些文件修改了，但是还没有提交等信息&lt;/p&gt;

&lt;h3 id=&#34;git-diff-某个文件-查看文件具体改动:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git diff 某个文件 ：查看文件具体改动&lt;/h3&gt;

&lt;p&gt;距离上次add时做的改动
git diff HEAD &amp;ndash; 具体某文件
查看工作区（即当前操作电脑目录里）和版本库里最新版本的区别&lt;/p&gt;

&lt;h3 id=&#34;git-log-查看提交日志:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git log ：查看提交日志&lt;/h3&gt;

&lt;p&gt;从最近开始倒序排列&lt;/p&gt;

&lt;h4 id=&#34;git-log-pretty-oneline-让每条提交记录显示在一行:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git log &amp;ndash;pretty=oneline:让每条提交记录显示在一行&lt;/h4&gt;

&lt;h4 id=&#34;git-log-graph-可以看到分支合并图:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git log &amp;ndash;graph :可以看到分支合并图&lt;/h4&gt;

&lt;p&gt;HEAD 代表当前版本&lt;/p&gt;

&lt;p&gt;HEAD^ 代表上一个版本&lt;/p&gt;

&lt;p&gt;HEAD^^ 代表上上个版本&lt;/p&gt;

&lt;p&gt;HEAD~100 代表往前第100个版本&lt;/p&gt;

&lt;h3 id=&#34;git-reset-hard-commitid-回退到某个版本:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git reset &amp;ndash;hard commitId ：回退到某个版本&lt;/h3&gt;

&lt;h4 id=&#34;git-reset-hard-head-回退到上一个提交的版本:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git reset &amp;ndash;hard HEAD^：回退到上一个提交的版本：&lt;/h4&gt;

&lt;p&gt;回退到其他历史提交的版本,把HEAD^ 替换为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;具体某个历史提交版本的commitId,可以只写commitId前几位（eg:7位），git 会自动匹配&lt;/li&gt;
&lt;li&gt;也可以是HEAD~NUM,eg:HEAD~100(往前第100个版本)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;git-reset-head-file-撤销缓存区的修改-重新放回工作区:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git reset HEAD file ：撤销缓存区的修改，重新放回工作区&lt;/h4&gt;

&lt;h3 id=&#34;git-reflog-展示所有提交的记录:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git reflog ： 展示所有提交的记录&lt;/h3&gt;

&lt;h3 id=&#34;暂存区的概念:838dbc65f53d3c39abae78bd31a98222&#34;&gt;暂存区的概念&lt;/h3&gt;

&lt;p&gt;不同于SVN,git有暂存区的概念&lt;/p&gt;

&lt;p&gt;具体细节&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1 当git add 后,先把修改的文件添加到暂存区&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2 当git commit 后，把暂存区的所有内容提交到当前分支&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;git-remote-add-origin-git-server-name-path-repo-name-git-本地仓库关联远程仓库:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git remote add origin git@server-name:path/repo-name.git ：本地仓库关联远程仓库&lt;/h3&gt;

&lt;h3 id=&#34;git-push-branchname-把本地某分支push-到远程仓库:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git push branchName：把本地某分支push 到远程仓库&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;把本地master分支push 到远程仓库：  git push -u origin master&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;把本地的master分支推送到远程的master分支，并和远程的master分支关联起来&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以后就可以直接使用git push origin master&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;git-clone-远程仓库地址-克隆远程仓库到本地:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git clone 远程仓库地址 ：克隆远程仓库到本地&lt;/h3&gt;

&lt;h3 id=&#34;git-branch-查看分支-展示当前是哪个分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git branch ：查看分支，展示当前是哪个分支&lt;/h3&gt;

&lt;p&gt;执行结果如下所示，展示所有的分支，* 标明当前的分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;→ git branch
dev
* master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;git-branch-branchname-创建分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git branch branchName 创建分支&lt;/h3&gt;

&lt;h3 id=&#34;git-checkout-branchname-切换到某个分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git checkout branchName 切换到某个分支&lt;/h3&gt;

&lt;h3 id=&#34;git-checkout-b-branchname-创建并切换到某个分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git checkout -b branchName 创建并切换到某个分支&lt;/h3&gt;

&lt;h4 id=&#34;git-checkout-b-branchname-origin-branchname-在本地创建和远程某分支对应的分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git checkout -b branchName origin/branchName：在本地创建和远程某分支对应的分支&lt;/h4&gt;

&lt;p&gt;备注：本地和远程分支的名称最好保持一致&lt;/p&gt;

&lt;h3 id=&#34;git-merge-no-ff-m-commitmessage-branchname-合并某分支到当前分支-并备注commit信息:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git merge &amp;ndash;no-ff -m commitMessage branchName :合并某分支到当前分支，并备注commit信息&lt;/h3&gt;

&lt;h4 id=&#34;git-merge-branchname-快速合并某分支到当前分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git merge branchName 快速合并某分支到当前分支&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;git merge branchName:Fast forword 模式合并，此次合并，没有说明信息&lt;/p&gt;

&lt;p&gt;git merge &amp;ndash;no-ff -m commitMessage branchName : no-ff 模式，把此次合并当做一次
commit，需要备注此次合并的说明信息，在master上可以看到此次合并的log信息&lt;/p&gt;

&lt;p&gt;####git merge &amp;ndash;no-ff -m &amp;ldquo;merge with no-ff&amp;rdquo; dev&lt;/p&gt;

&lt;h3 id=&#34;git-branch-d-name-删除某分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git branch -d name 删除某分支&lt;/h3&gt;

&lt;h4 id=&#34;git-branch-d-name-在分支还没有被合并时-强制删除分支:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git branch -D name:在分支还没有被合并时，强制删除分支&lt;/h4&gt;

&lt;h3 id=&#34;git-stash-把工作现场储藏起来-等以后恢复:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git stash：把工作现场储藏起来，等以后恢复&lt;/h3&gt;

&lt;p&gt;对于被git管理的文件，在当前工作空间做了修改，但是未add 未commit，在当前工作空间修改后，git stash 后，储藏这些修改，git status 会隐藏这些修改（对于未被git 管理的文件不适用）&lt;/p&gt;

&lt;h4 id=&#34;git-stash-list-展示所有stash的记录:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git stash list ：展示所有stash的记录&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git stash list
stash@{0}: WIP on dev: 34b4cce branch dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;git-stash-apply-stash-num-恢复某个stash-but不删除某个stash:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git stash apply stash@{Num}：恢复某个stash，but不删除某个stash&lt;/h4&gt;

&lt;h4 id=&#34;git-stash-drop-stash-num-删除某个stash:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git stash drop stash@{Num}：删除某个stash&lt;/h4&gt;

&lt;h4 id=&#34;git-stash-pop-stash-num-恢复某个stash并删除stash:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git stash pop stash@{Num}：恢复某个stash并删除stash&lt;/h4&gt;

&lt;h3 id=&#34;git-remote-查看远程仓库的信息:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git remote：查看远程仓库的信息&lt;/h3&gt;

&lt;p&gt;远程仓库的默认名称是origin&lt;/p&gt;

&lt;h4 id=&#34;git-remote-v-显示远程仓库更详细的信息:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git remote -v ：显示远程仓库更详细的信息&lt;/h4&gt;

&lt;h3 id=&#34;git-branch-set-upstream-本地branchname-origin-branchname-指定本地dev分支与远程分支的链接:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git branch &amp;ndash;set-upstream 本地branchName origin/branchName：指定本地dev分支与远程分支的链接&lt;/h3&gt;

&lt;p&gt;git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建&lt;/p&gt;

&lt;h3 id=&#34;git-tag-tagname-eg-v1-0-打标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag tagName(eg:V1.0):打标签&lt;/h3&gt;

&lt;p&gt;默认打标签是在最新提交的commit上&lt;/p&gt;

&lt;h4 id=&#34;git-tag-tagname-commitid-给某次提交打标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag tagName commitId:给某次提交打标签&lt;/h4&gt;

&lt;h4 id=&#34;git-tag-a-tagname-m-tagmessage-创建带有说明信息的标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag -a tagName -m &amp;ldquo;tagMessage&amp;rdquo;:创建带有说明信息的标签&lt;/h4&gt;

&lt;p&gt;-a 指定标签名，-m 指定说明文字&lt;/p&gt;

&lt;h4 id=&#34;git-tag-s-tagname-m-tagmessage-创建使用pgp签名的标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag -s tagName -m &amp;ldquo;tagMessage&amp;rdquo;:创建使用PGP签名的标签&lt;/h4&gt;

&lt;p&gt;签名采用PGP签名，必须首先安装gpg，如果没有找到gpg，或者没有gpg秘钥对，会报错&lt;/p&gt;

&lt;h4 id=&#34;git-tag-查看所有tag:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag ：查看所有tag&lt;/h4&gt;

&lt;h4 id=&#34;git-show-tagname-查看某标签的信息:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git show tagName:查看某标签的信息&lt;/h4&gt;

&lt;h4 id=&#34;git-tag-d-tagname-删除本地某标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git tag -d tagName:删除本地某标签&lt;/h4&gt;

&lt;h4 id=&#34;git-push-origin-refs-tags-tagname-删除推送到远程库的标签:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git push origin :refs/tags/tagName :删除推送到远程库的标签&lt;/h4&gt;

&lt;h4 id=&#34;git-push-origin-tagname-推送某个标签到远程:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git push origin tagName：推送某个标签到远程&lt;/h4&gt;

&lt;h4 id=&#34;git-push-origin-tags-推送所有本地尚未推送到远程的标签到远程仓库:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git push origin &amp;ndash;tags：推送所有本地尚未推送到远程的标签到远程仓库&lt;/h4&gt;

&lt;h3 id=&#34;忽略特殊文件:838dbc65f53d3c39abae78bd31a98222&#34;&gt;忽略特殊文件&lt;/h3&gt;

&lt;h4 id=&#34;定义自己的-gitignore-忽略某些文件:838dbc65f53d3c39abae78bd31a98222&#34;&gt;定义自己的.gitignore，忽略某些文件&lt;/h4&gt;

&lt;p&gt;对于特殊文件，eg:数据库密码，邮箱密码等文件，不想git status 显示 Untracked files 时&lt;/p&gt;

&lt;p&gt;可以在git 工作区的根目录创建 .gitignore文件，把要忽略的文件名填进去，git 会自动忽略这些文件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;.gitignore 文件也需要提交到git&lt;/p&gt;

&lt;h4 id=&#34;git-add-f-filename-强制添加被忽略的文件:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git add -f fileName:强制添加被忽略的文件&lt;/h4&gt;

&lt;h4 id=&#34;git-check-ignore-v-filename-查看某个文件不能提交是因为哪个规则:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git check-ignore -v fileName：查看某个文件不能提交是因为哪个规则&lt;/h4&gt;

&lt;h3 id=&#34;git命令配置别名:838dbc65f53d3c39abae78bd31a98222&#34;&gt;git命令配置别名&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375234012342f90be1fc4d81446c967bbdc19e7c03d3000&#34;&gt;git命令配置别名点击这里查看&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
